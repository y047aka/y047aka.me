{"body":"\nElm で CSS を扱う方法の検討と、[elm-css](https://package.elm-lang.org/packages/rtfeldman/elm-css/latest) に至るまでの記録です。\n\n# 選択肢\n\nElm のアプリケーションで CSS を扱うための方法にはどのようなものがあるでしょうか？\n\n### HTML で CSS ファイルを読み込む\n\n最もオーソドックスな方法です。\nSass などのプリプロセッサや PostCSS などの仕組みも問題なく使うことができます。\nただし、この方法が Elm で常に使えるわけではありません。\nEllie などのオンラインエディタや、HTML を生成しない `elm reactor` などで実行する場合は CSS を読み込むことはできず、インラインに記述するなどの工夫が必要です。\n\n### CSS フレームワーク\n\n[Bulma](https://bulma.io/)、[Tailwind CSS](https://tailwindcss.com/)、[Semantic UI](https://semantic-ui.com/) などがあります。\nこのうち Bulma については 3 ヶ月ほど使ってみました。\n用意されているスタイルだけでは足りない場合は、自分でスタイルを書く必要があります。\n\n### elm-ui\n\n従来 CSS が担っていたレイアウトの定義を Elm で記述できるようにしたライブラリです。\nレイアウト以外のスタイルは別の方法で指定する必要がありますが、使い勝手の良いライブラリとして人気を集めています。\n（私はまだ使ったことがない）\n\n### elm-css\n\n私が現在使っている方法です。\nプロパティや値が型つきで定義されていて、Elm のファイル内でスタイルを指定できます。\nこれまで日本ではあまり注目されていませんでしたが、この記事をきっかけにして普及するといいな。\n\n「HTML で CSS ファイルを読み込む」と「elm-css」について、詳しく見てみましょう。\n\n# 記録： HTML で CSS ファイルを読み込む\n\nElm を初めてからしばらくは、使い慣れた HTML で CSS ファイルを読み込む方法を採用していました。\n[elm-live](https://www.elm-live.com/) というツールが非常に便利だったため、モジュールバンドラー不要の開発を実現していました。\n当時の私が書いていた CSS は一般的な CSS 設計とは異なるスタイルでしたが、「Elm で CSS を扱う」という目的は充分に達成していました。\n\n### elm-live のリロード機能\n\nelm-live の v3 系では CSS ファイルの更新を感知してブラウザをリロードする機能あり、非常に快適に開発を進めることができました。\n4.0.0 で大きな変更がありこの機能は省略されてしまいましたが、今後復活することを期待しています。\n\n[Watching css files? · Issue #196 · wking-io/elm-live](https://github.com/wking-io/elm-live/issues/196)\n\n### 別の方法を探す\n\n実際のところ、elm-live から CSS のライブリロード機能がなくなったことは、私が別の方法を模索するきっかけになりました。\nCSS フレームワークの Bulma を試していたりもしましたが、ここでは省略します。\nジンジャーさんが書かれている [CSS フレームワークを使いたくない - ジンジャー研究室](http://jinjor-labo.hatenablog.com/entry/2019/03/13/084116)\nは、私の感想にかなり近いと思います。\nとはいえ、デザインをフォーマットする手段としては有効だと感じます。\n\n# 記録： elm-css\n\n2020 年に入り elm-css を導入しました。\nそして、この試みは今のところ上手くいっています。\nelm-css の特徴や使ってみての感想を以下に列挙します。\n\n### 型の存在\n\nプロパティや値に応じた型が用意されているため、コンパイル時に記述のミスを発見することができます。\nCSS であることに変わりはないので、詳細度やその他いくつかの問題に対しては CSS を記述する時と同じように気をつける必要があります。\n\n### locally scoped CSS\n\n記述したスタイルにはランダムな class 名が付与されます。\nこれを HTML の要素と紐付けることでローカルなスコープを実現しています。\nクラスを使ったセレクタも書けるようになっているので、ローカルなスコープ以外の方法で紐付けたい場合に使いましょう。\n\n### CSS のプロパティや値はそのまま\n\n過去に CSS の経験があれば、知識をそのまま活用できます。\nすべてが網羅されているわけではありませんが、不足があれば新たに関数を作って補うことができます。\n「CSS でできることは、elm-css でも同じようにできる」という認識で良さそうです。\n\n### 動的な値を含めることができる\n\n数値を Elm で計算して含めることも、ロジックに応じてプロパティ単位で指定を変更することもできます。\nなんでもできてしまうので、やりすぎに注意する必要はあるかもしれません。\n\n### 関心の分離\n\nCSS in Elm の採用にあたって気になる部分だと思うのですが、elm-css の採用検討にあたってはそれほど重要ではないと感じています。\n書き方の工夫で大きく変わるので、採用後に色々と検討してみると良いと思います。\n「関心の分離」は個人的には重要なので、いつか詳しい記事を書くつもり。\n\n### コンパイルが必要\n\nアプリケーションが小さいうちはそれほど気になりませんが、スタイルを変更するたびにコンパイルが必要です。\n大きくなると少しストレスに感じるかもしれません。\nそのうち慣れます。\n\n# Q & A\n\n### 学習コスト\n\nCSS を書けるのであれば、それほど苦労はしないと思います。\nプロパティや値のほとんどは、スネークケースをキャメルケースにすれば使うことができます。\nよく言われる「デザイナーとの協業」については試したことがないのでわかりません。\nCSS in JS を採用している人に聞いてみたい。\n\n### 捨てやすさ\n\nすべてのプロパティや値は CSS と共通なので、クラスを改めて指定する手間さえ惜しまなければ適当に変換できるはずです。\n\n### CSS に型安全は過剰？\n\n型安全が elm-css のすべてではないので総合的に判断すれば良いと思います。\n\n### 擬似クラス、擬似要素、メディアクエリは使える？\n\n使えます。\n\n### PostCSS は使える？\n\n現行の elm-css だけでは PostCSS は使えません。\n必要な機能は関数として作ってしまえば、それほど困ることはないのかなと考えています。\n\n### リセット CSS がほしい\n\n[y047aka/elm-reset-css](https://package.elm-lang.org/packages/y047aka/elm-reset-css/latest/) を作りました。\n\n### elm-css を既存の CSS と組み合わせたい\n\nHTML ファイルで既存の CSS を読み込みつつ、適宜 elm-css の指定を追加できます。\n既存の CSS から elm-css へと段階的な移行もできますね。\n\n### CSS ファイルを生成したい\n\n過去に [elm-css-webpack-loader](https://github.com/tcoopman/elm-css-webpack-loader) や [ThinkAlexandria/css-in-elm](https://package.elm-lang.org/packages/ThinkAlexandria/css-in-elm/latest/) が開発されていたので、参考にすると良さそうです。\n私は今のところ試していません。\n\n# 参考\n\nelm-css を採用している事例の紹介です。\n\n### noredink-ui\n\nNoRedInk 社製の UI ウィジェット集です。\n実践的な使い方はこのパッケージの実装を参考にするのが良いかも。\n[NoRedInk/noredink-ui](https://package.elm-lang.org/packages/NoRedInk/noredink-ui/latest/)\n\n### elm-css patterns\n\nelm-css のレイアウトパターン集です。\n綺麗にまとまっているので、elm-ui との比較検討をする場合に役立ちそう。\n[elm-css patterns](https://elmcsspatterns.io/)\n\n# 今後の展望\n\nいま試しているものや、未来の可能性など。\n\n### Palette の導入\n\nCSS で最も難しいことのひとつが色の管理です。\n変数を活用する方法は既存の CSS でも普及していますが、私は background / color / border などをセットにした Palette という単位を試しています。\n今のところ上手く機能しているので、elm-css を使う利点の 1 つとして考えています。\n[https://github.com/y047aka/y047aka.space/blob/master/src/Color/Palette.elm](https://github.com/y047aka/y047aka.space/blob/master/src/Color/Palette.elm)\n\n### elm-ui との関係性\n\nレイアウトに関するスタイルのみを CSS から切り離すことへの違和感が強く、私自身は [elm-ui](https://package.elm-lang.org/packages/mdgriffith/elm-ui/latest/) を使ったことがありませんでした。\nelm-css を深めていく中で、いまは elm-ui の手法を一部取り入れる可能性もあると考えています。\n\n### CSS への期待\n\nelm-css を導入した背景には、CSS 設計（BEM など）への反発もありました。\n従来の CSS 設計とは異なる新しいパラダイムの登場や CSS 自体のさらなる進化を期待しています。\n","staticData":{}}